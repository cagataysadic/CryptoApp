[{"D:\\react-projeleri\\crypto-app\\src\\index.js":"1","D:\\react-projeleri\\crypto-app\\src\\App.js":"2","D:\\react-projeleri\\crypto-app\\src\\components\\CryptoData.js":"3"},{"size":253,"mtime":1676928397000,"results":"4","hashOfConfig":"5"},{"size":165,"mtime":1676928397000,"results":"6","hashOfConfig":"5"},{"size":2623,"mtime":1676995487694,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1iz0x3m",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"D:\\react-projeleri\\crypto-app\\src\\index.js",[],[],"D:\\react-projeleri\\crypto-app\\src\\App.js",[],[],"D:\\react-projeleri\\crypto-app\\src\\components\\CryptoData.js",["18"],[],"import { useState, useEffect } from \"react\";\r\nimport \"./CryptoData.css\"\r\n\r\nconst CryptoData = () => {\r\n    const [crypto, setCrypto] = useState(\"\");\r\n    const [search, setSearch] = useState(\"\");\r\n    const [random, setRandom] = useState(\"\");\r\n\r\n    const getData = async () => {\r\n        try {\r\n            const request = await fetch(\"https://api.coincap.io/v2/assets\");\r\n            const json = await request.json();\r\n            setCrypto(json);\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    const getRandom = async () => {\r\n        try {\r\n            const randomList = []\r\n            const randomElement = await crypto.data.map((element) => randomList.push(element))\r\n            const randomSymbol = randomElement[Math.floor(Math.random() * randomElement.length)]\r\n            setRandom(crypto.data[randomSymbol].symbol)\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n    useEffect(() => {\r\n        getData();\r\n        getRandom();\r\n    }, []);\r\n    console.log(crypto.data)\r\n    return (\r\n        <>\r\n            <div className=\"app-container\">\r\n                <div className=\"search-container\">\r\n                    <input type=\"text\" placeholder=\"your currency...\" onChange={(e) => setSearch(e.target.value)} />\r\n                </div>\r\n                <div className=\"random-container\">\r\n                    <a href={`https://www.binance.com/en/trade/${random}_BUSD`}>\r\n                        <button>Big Investment</button>\r\n                    </a>\r\n                </div>\r\n                <div className=\"card-container\">\r\n                    {crypto && crypto.data.filter((crypto) => crypto.name.toLowerCase().includes(search.toLowerCase())).map((c) => (\r\n                        <div className=\"crypto-card\">\r\n                            <h2>{c.name}</h2>\r\n                            <h2>{c.priceUsd}$</h2>\r\n                            <h2>{c.rank}</h2>\r\n                            <h2>{c.symbol}</h2>\r\n                            <h2>{c.supply}</h2>\r\n                            <div className=\"crypto-card-link\">\r\n                                <a href={`https://www.binance.com/en/trade/${c.symbol}_BUSD`}>\r\n                                    <div className=\"crypto-card-link-button\">\r\n                                        <button>Buy Some?</button>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default CryptoData",{"ruleId":"19","severity":1,"message":"20","line":32,"column":8,"nodeType":"21","endLine":32,"endColumn":10,"suggestions":"22"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRandom'. Either include it or remove the dependency array.","ArrayExpression",["23"],{"desc":"24","fix":"25"},"Update the dependencies array to be: [getRandom]",{"range":"26","text":"27"},[1024,1026],"[getRandom]"]